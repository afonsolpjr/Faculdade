
/*      LISTA 4A - AFONSO LUSTOSA PIRES JUNIOR */



/*              EXERCÍCIO 1: 

ENTRADA: "Insira o número de linhas: 5
Insira o número de colunas: 3

SAÍDA: *****
       *****
       *****





#include <stdio.h>
#include <string.h>

int main(void)
{
    int linhas,cols,i_cols,tipo;
    char c= '*';

    puts("\nInsira o número de linhas");
    while((tipo=scanf("%d",&linhas))==0)
    {
        puts("\nInsira o número de linhas: ");
        tipo=scanf("%d",&linhas);
        getchar();
    }
    
    puts("\nInsira o número de colunas");
    while((tipo=scanf("%d",&cols))==0)
    {
        puts("\nInsira o número de coluna: ");
        tipo=scanf("%d",&cols);
        getchar();
    }

    for(;linhas>0;linhas--)
    {
        for(i_cols=cols;i_cols>0;i_cols--)
        {
            putchar(c);
        }
        putchar('\n');
    }

    return 0;
} */





/*          EXERCÍCIO 2:

ENTRADA: Insira o número de linhas: 4
SAÍDA:
*
**
***
****



#include <stdio.h>
#include <string.h>

int main(void)
{
    int linhas,tipo,i,n_impressoes;
    char c='*';

    puts("\nInsira o número de linhas");
    while((tipo=scanf("%d",&linhas))==0)
    {
        puts("\nInsira o número de linhas: ");
        tipo=scanf("%d",&linhas);
        getchar();
    }



    for(n_impressoes=1;linhas>0;linhas--,n_impressoes++)
    {
        for(i=0;i<n_impressoes;i++)
        {
            putchar(c);
        }
        putchar('\n');
    }

    return 0;
}           */


/*                  EXERCÍCIO 3

ENTRADA: Insira o número de linhas: 4
SAÍDA: 
****
***
**
*


#include <stdio.h>
#include <string.h>

int main(void)
{
    int linhas,tipo,i,n_impressoes;
    char c='*';

    puts("\nInsira o número de linhas");
    while((tipo=scanf("%d",&linhas))==0)
    {
        puts("\nInsira o número de linhas: ");
        tipo=scanf("%d",&linhas);
        getchar();
    }


    for(n_impressoes=linhas;linhas>0;linhas--,n_impressoes--)
    {
        for(i=0;i<n_impressoes;i++)
        {
            putchar(c);
        }
        putchar('\n');
    }

    return 0;
}           */


/*Exercício 4 (não há demanda) /       EXERCÍCIO 5
O gerador de números aletórios é bem preciso quanto a igual distribuição da paridade  dos números gerados,
aqui teve pelo menos 0.14% como erro máximo.


#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int main(void)
{
    int i,n,pares=0,impares=0;
    float freq_par,freq_imp;
    int max = 100;
    
    srand(time(NULL));

    for(i=0;i<1000000;i++)
    {
        n=rand();
        
        n%2==0?pares++:impares++;
        
        
    }
    freq_par= (pares/1000000.0) * 100;
    freq_imp= (impares/1000000.0) * 100;
    printf("\nForam gerados %d números, e %.3f%% são pares e %.3f%% são ímpares.",i,freq_par,freq_imp);





    return 0;
 }*/








/* EXERCÍCIO 6:

Para gerar números entre 1 e 6, peguei o módulo da divisão do número por 6(varia entre 0 e 5) e somei 1.
Incrivelmente, a frequencia se manteu dentro do esperado, girando em torno de 16,6%!!!!! 
#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int main(void)
{
    int i,n,j;
    float frequencias[6];
    int max=6;

    for(i=0;i<6;i++)
    {
        frequencias[i]=0;
    }
    
    
    srand(time(NULL));

    for(i=0;i<6000000;i++)
    {
        n=rand();
        n=(n%max)+1;
        for(j=0;j<6;j++)
        {
            if(j==(n-1))
            {
                frequencias[j]++;
            }
        }
    }

    for(i=0;i<6;i++)
    {
        frequencias[i]=(frequencias[i]/6000000.0)*100;
    }

    for (i=0;i<6;i++)
    {
        printf("A frequência de %d foi %.1f%%\n",i+1,frequencias[i]);
    }
    
    return 0;
 }     */




 /*             EXERCÍCIO 7  */

#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int main(void)
{
    int i,dentro;
    float x,y,quase_pi;
    int max=9999999;
    srand(time(NULL));
    

    for(i=0;i<max;i++)
    {

        x=1.0*rand()/RAND_MAX;
        y=1.0*rand()/RAND_MAX;
        
    
    if((x*x + y*y)<1)
    {
        dentro++;
    }

    }

    quase_pi = (4.0*dentro)/max;
    printf("\nValor aproximado de pi foi: %.5f\n",quase_pi);





    return 0;
 }
